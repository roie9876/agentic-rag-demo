#!/usr/bin/env python3
"""
M365 Teams Admin Permission Guide
=================================
This script explains exactly what permissions are needed and where to find them.
"""

def explain_teams_admin_permissions():
    print("=" * 70)
    print("🔑 TEAMS ADMIN PERMISSIONS - DETAILED GUIDE")
    print("=" * 70)
    
    print("\n🎯 EXACT PERMISSIONS NEEDED:")
    print("-" * 40)
    print("To upload apps to the Microsoft Teams App Catalog, you need")
    print("one of these Azure AD roles assigned to your user account:")
    print()
    print("1. 🏆 Teams Administrator (Recommended)")
    print("   • Role ID: 69091246-20e8-4a56-aa4d-066075b2a7a8")
    print("   • Allows full Teams management")
    print("   • Can upload, approve, and manage Teams apps")
    print()
    print("2. 🌐 Global Administrator")
    print("   • Role ID: 62e90394-69f5-4237-9190-012177145e10")
    print("   • Full tenant control (usually restricted)")
    print()
    print("3. 📱 Teams Communications Administrator")
    print("   • Role ID: baf37b3a-610e-45da-9e62-d9d1e5e8914b")
    print("   • Focus on calling and meetings")
    print("   • May also allow app uploads")

def show_where_to_find_permissions():
    print("\n" + "=" * 70)
    print("📍 WHERE TO CHECK/ASSIGN PERMISSIONS")
    print("=" * 70)
    
    print("\n🔍 METHOD 1: Azure Portal (Recommended)")
    print("-" * 40)
    print("1. Go to: https://portal.azure.com")
    print("2. Navigate: Azure Active Directory → Users")
    print("3. Search for your user account")
    print("4. Click on your user → Assigned roles")
    print("5. Check if you have any of these roles:")
    print("   • Teams Administrator")
    print("   • Global Administrator")
    print("   • Teams Communications Administrator")
    print()
    print("📋 If you DON'T see these roles:")
    print("   → You need an admin to assign them")
    print("   → Contact your IT administrator")
    
    print("\n🔍 METHOD 2: Microsoft 365 Admin Center")
    print("-" * 40)
    print("1. Go to: https://admin.microsoft.com")
    print("2. Navigate: Users → Active users")
    print("3. Find your user account")
    print("4. Click on user → Manage roles")
    print("5. Look for 'Teams Administrator' role")
    
    print("\n🔍 METHOD 3: PowerShell Check")
    print("-" * 40)
    print("Run this PowerShell command to check your roles:")
    print()
    print("```powershell")
    print("# Connect to Azure AD")
    print("Connect-AzureAD")
    print()
    print("# Get your user roles")
    print("$user = Get-AzureADUser -ObjectId 'your@email.com'")
    print("Get-AzureADUserMembership -ObjectId $user.ObjectId | ")
    print("  Where-Object {$_.DisplayName -like '*Teams*' -or $_.DisplayName -like '*Global*'}")
    print("```")

def explain_permission_assignment():
    print("\n" + "=" * 70)
    print("👑 HOW TO GET PERMISSIONS ASSIGNED")
    print("=" * 70)
    
    print("\n📧 REQUEST FROM IT ADMIN:")
    print("-" * 40)
    print("Send this email template to your IT administrator:")
    print()
    print("```")
    print("Subject: Request for Teams Administrator Role")
    print()
    print("Hi [IT Admin],")
    print()
    print("I need to deploy Microsoft 365 apps/plugins for our organization.")
    print("To upload apps to the Teams App Catalog, I need the 'Teams Administrator'")
    print("role assigned to my account.")
    print()
    print("User Account: [your@email.com]")
    print("Required Role: Teams Administrator")
    print("Reason: Deploy M365 Copilot plugins via PowerShell")
    print()
    print("This role allows me to:")
    print("- Upload custom Teams apps")
    print("- Manage app permissions")
    print("- Use PowerShell Teams module for deployment")
    print()
    print("Please assign this role in Azure Portal → Users → [My Account] → Assigned roles")
    print()
    print("Thanks!")
    print("```")
    
    print("\n🔧 STEPS FOR ADMIN TO ASSIGN ROLE:")
    print("-" * 40)
    print("If you ARE an admin, follow these steps:")
    print("1. Go to: https://portal.azure.com")
    print("2. Azure Active Directory → Users")
    print("3. Find the user account")
    print("4. Click: Assigned roles → + Add assignment")
    print("5. Search for: 'Teams Administrator'")
    print("6. Select the role → Add")
    print("7. Verify: Role appears in 'Assigned roles' list")

def explain_alternative_approaches():
    print("\n" + "=" * 70)
    print("🔄 ALTERNATIVE APPROACHES (If You Can't Get Admin Role)")
    print("=" * 70)
    
    print("\n1. 📱 Manual Upload (No Special Permissions Needed)")
    print("-" * 50)
    print("• Go to: https://admin.teams.microsoft.com/policies/manage-apps")
    print("• Click: 'Upload new app'")
    print("• Select: appPackage.zip")
    print("• This works with basic Teams permissions")
    print()
    print("2. 🔄 Sideloading (For Testing)")
    print("-" * 50)
    print("• Go to: Teams client → Apps → Upload a custom app")
    print("• Select: appPackage.zip")
    print("• App will be available only to you/your team")
    print()
    print("3. 👥 Request IT Team Deployment")
    print("-" * 50)
    print("• Provide appPackage.zip to IT team")
    print("• They can upload it using their admin permissions")
    print("• Include deployment instructions from our PowerShell script")
    print()
    print("4. 🔐 Service Account Approach")
    print("-" * 50)
    print("• Create a dedicated service account")
    print("• Assign Teams Administrator role to service account")
    print("• Use that account for automated deployments")

def show_verification_steps():
    print("\n" + "=" * 70)
    print("✅ HOW TO VERIFY PERMISSIONS WORK")
    print("=" * 70)
    
    print("\n📋 STEP-BY-STEP VERIFICATION:")
    print("-" * 40)
    print("1. Check role assignment:")
    print("   → Azure Portal → Users → [Your Account] → Assigned roles")
    print("   → Should see 'Teams Administrator'")
    print()
    print("2. Test Teams Admin Center access:")
    print("   → Go to: https://admin.teams.microsoft.com")
    print("   → Navigate to: Teams apps → Manage apps")
    print("   → Should see 'Upload new app' button")
    print()
    print("3. Test PowerShell deployment:")
    print("   → Run: pwsh ./deploy_m365_powershell.ps1")
    print("   → Should succeed without authorization errors")
    print()
    print("4. Verify app appears:")
    print("   → Teams Admin Center → Manage apps")
    print("   → Search for your app name")
    print("   → Should appear in the list")

def main():
    explain_teams_admin_permissions()
    show_where_to_find_permissions()
    explain_permission_assignment()
    explain_alternative_approaches()
    show_verification_steps()
    
    print("\n" + "=" * 70)
    print("🎯 QUICK SUMMARY")
    print("=" * 70)
    print("PROBLEM: Need 'Teams Administrator' role")
    print("SOLUTION: Ask IT admin to assign role in Azure Portal")
    print("CHECK: Azure Portal → Users → [You] → Assigned roles")
    print("TEST: https://admin.teams.microsoft.com/policies/manage-apps")
    print("=" * 70)

if __name__ == "__main__":
    main()
